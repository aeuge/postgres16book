sudo apt install -y pgtop
-- pgtop
-- 2 окно
sudo -u postgres psql
CREATE TABLE test(i int);
INSERT INTO test SELECT s.id FROM generate_series(1,1000000000) AS s(id);

-- 1 
sudo -u postgres pg_top

-- текст запроса Q #
-- план E
-- блокировки L


-- что подключено в текущую секунду
sudo -u postgres psql

-- во 2 запустим нагрузку

SELECT * FROM pg_stat_activity;

-- Получаем активные запросы длительностью более 5 секунд:
SELECT now() - query_start as "runtime", usename, datname, state, wait_event_type, wait_event, query 
FROM pg_stat_activity 
WHERE now() - query_start > '5 seconds'::interval and state='active' 
ORDER BY runtime DESC;

-- State = ‘idle’ тоже вызывают подозрения. Но хуже всего - idle in transaction!

-- Далее убиваем: для active
-- SELECT pg_cancel_backend(procpid);
-- для idle
-- SELECT pg_terminate_backend(procpid); 


-- ТОП по загрузке CPU:
SELECT pid, xact_start, now() - xact_start AS duration 
FROM pg_stat_activity 
WHERE state LIKE '%active%' 
ORDER BY duration DESC;

-- использование pg_stat_statements
CREATE EXTENSION pg_stat_statements;
ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';
exit
pg_ctlcluster 16 main restart
psql
show shared_preload_libraries;

SELECT * FROM  pg_stat_statements;

SELECT substring(query, 1, 50) AS short_query, round(total_exec_time::numeric, 2) AS total_time,
	calls, rows, round(total_exec_time::numeric / calls, 2) AS avg_time,
	round((100 * total_exec_time / sum(total_exec_time::numeric) OVER ())::numeric, 2) AS percentage_cpu
FROM pg_stat_statements
ORDER BY total_time DESC LIMIT 20;

-- ТОП по времени выполнения:
SELECT substring(query, 1, 50) AS short_query, round(total_exec_time::numeric, 2) AS total_time,
	calls, rows, round(total_exec_time::numeric / calls, 2) AS avg_time,
	round((100 * total_exec_time / sum(total_exec_time::numeric) OVER ())::numeric, 2) AS percentage_cpu
FROM pg_stat_statements
ORDER BY avg_time DESC LIMIT 20;

SELECT schemaname, relname, seq_scan, seq_tup_read, seq_tup_read / seq_scan AS avg, idx_scan
FROM pg_stat_user_tables
WHERE seq_scan > 0
ORDER BY seq_tup_read DESC
LIMIT 25;


-- PMM
curl -fsSL https://www.percona.com/get/pmm | /bin/bash

htop
-- под капотом клик + виктория метрикс)
-- Yandex browser not supported

-- дадим нагрузку
sudo -u postgres psql -c "CREATE TABLE test(i int);"
sudo -u postgres psql -c "INSERT INTO test SELECT s.id FROM generate_series(1,1000000000) AS s(id);"

sudo ls -la /var/lib/postgresql/16/main/pg_wal

sudo su postgres
pgbench -i -s 1000 postgres

pgbench -P 1 -c 10 -j 4 -T 10 postgres
-- и не видим...

sudo docker exec -it pmm-server bash
psql -h localhost -U postgres
\du
SELECT * FROM information_schema.table_privileges WHERE grantee = 'postgres' LIMIT 10;

-- нужен еще и клиент
-- https://habr.com/ru/articles/694724/
-- https://www.josip-pojatina.com/en/postgres-monitoring-with-percona-pmm/
wget https://repo.percona.com/apt/percona-release_latest.generic_all.deb && sudo dpkg -i ./percona-release_latest.generic_all.deb && sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt install -y pmm2-client postgresql-contrib

sudo pmm-admin --version

-- сбросить первоначальный пароль admin/admin
-- https://34.135.172.153/graph/login

-- зарегаем клиента
sudo pmm-admin config --server-insecure-tls --server-url=https://admin:admin123$@127.0.0.1:443
-- Failed to register pmm-agent on PMM Server: Post "https://[admin:admin123127.0.0.1:443]:443/v1/management/Node/Register"

-- экранируем спецсимволы
sudo pmm-admin config --server-insecure-tls --server-url=https://admin:admin123\$@127.0.0.1:443

sudo -u postgres psql
-- НЕ суперюзер
CREATE USER pmm with password 'pmm123pmm';
GRANT pg_monitor to pmm;

-- Создадим расширение для мониторинга
-- pg_stat_statements - устарело
sudo percona-release setup ppg16
sudo apt-get install percona-pg-stat-monitor16
sudo -u postgres psql
ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_monitor';
ALTER SYSTEM SET track_io_timing = on;

CREATE EXTENSION pg_stat_monitor;

sudo pg_ctlcluster 16 main restart

-- Putting database under monitoring
sudo pmm-admin add postgresql --username=pmm --password=pmm123pmm pgtest

sudo pmm-admin list

sudo pmm-admin remove postgresql pgtest

-- сервис "Онлайн-кинотека" с дополнительным мониторингом, используя инструмент PMM
https://github.com/aeuge/pmm-database-project


-- профилирование
alter system set log_min_duration_statement = 0;
select pg_reload_conf();
show log_min_duration_statement;
select * from test;
exit

sudo DEBIAN_FRONTEND=noninteractive apt install -y pgbadger lynx
tail /var/log/postgresql/postgresql-16-main.log
pgbadger /var/log/postgresql/postgresql-16-main.log
lynx out.html

